# Provision AWS EC2 instance
#
# $ terraform init
# $ terraform apply -var "instance_name=YetAnotherName"
# $ terraform output
#

# Block contains Terraform settings, including the required providers Terraform will use to provision your
# infrastructure. For each provider, the source attribute defines an optional hostname, a namespace, and the provider
# type. Terraform installs providers from the Terraform Registry by default. In this example configuration, the aws
# provider's source is defined as hashicorp/aws, which is shorthand for registry.terraform.io/hashicorp/aws
#
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 3.27"
    }
  }

  required_version = ">= 0.14.9"
}

# The provider block configures the specified provider, in this case aws. A provider is a plugin that Terraform uses
# to create and manage your resources
#
# The profile attribute in the aws provider block refers Terraform to the AWS credentials stored in your AWS
# configuration file, which you created when you configured the AWS CLI. Never hard-code credentials or other secrets
# in your Terraform configuration files.
#
provider "aws" {
  profile = "default"
  region  = "us-west-2"
}

# Use resource blocks to define components of your infrastructure. A resource might be a physical or virtual component
# such as an EC2 instance, or it can be a logical resource such as a Heroku application.
#
# aws_instance - resource type
# app_server - resource name
#
# Resource ID - aws_instance.app_server
#
# Apply output format is similar to the diff format generated by tools such as Git. The output has a + next to
# aws_instance.app_server, meaning that Terraform will create this resource. Beneath that, it shows the attributes that
# will be set. When the value displayed is (known after apply), it means that the value will not be known until the
# resource is created. For example, AWS assigns Amazon Resource Names (ARNs) to instances upon creation, so Terraform
# cannot know the value of the arn attribute until you apply the change and the AWS provider returns that value from
# the AWS API.
#
resource "aws_instance" "app_server" {
  ami           = "ami-830c94e3"
  instance_type = "t2.micro"

  tags = {
    Name = "ExampleAppServerInstance"
  }
}
